{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Infrastructure for a MicroBOSH deployment with an ELB.",

  "Parameters": {
    "KeyName": {
      "Description": "SSH Keypair to use for instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "bosh"
    },

    "HostedZoneName": {
      "Description": "(Optional) Route53 Hosted Zone in which to register the ELB's DNS record.",
      "Type": "String",
      "Default": ""
    },
    "ELBRecordSetName": {
      "Description": "(Optional) Route53 Record Set name for the ELB.",
      "Type": "String",
      "Default": ""
    },

    "BOSHInboundCIDR": {
      "Description": "CIDR to permit access to BOSH (e.g. 205.103.216.37/32 for your specific IP)",
      "Type": "String",
      "Default": "0.0.0.0/0"
    },

    "VPCCIDR": {
      "Description": "CIDR block for the VPC.",
      "Type": "String",
      "Default": "10.0.0.0/16"
    },
    "BOSHSubnetCIDR": {
      "Description": "CIDR block for the BOSH subnet.",
      "Type": "String",
      "Default": "10.0.0.0/24"
    },
    "LoadBalancerSubnetCIDR": {
      "Description": "CIDR block for the BOSH subnet.",
      "Type": "String",
      "Default": "10.0.2.0/24"
    },
    "InternalSubnetCIDR": {
      "Description": "CIDR block for the Internal subnet.",
      "Type": "String",
      "Default": "10.0.16.0/20"
    },
    "LoadBalancerCertName": {
      "Description": "Name of the SSL cert to use for the ELB.",
      "Type": "String",
      "Default": ""
    }
  },

  "Mappings": {
    "AWSNATAMI" : {
      "us-east-1":      { "AMI": "ami-68115b02" },
      "us-west-1":      { "AMI": "ami-ef1a718f" },
      "us-west-2":      { "AMI": "ami-77a4b816" },
      "eu-west-1":      { "AMI": "ami-c0993ab3" },
      "eu-central-1":   { "AMI": "ami-0b322e67" },
      "ap-southeast-1": { "AMI": "ami-e2fc3f81" },
      "ap-southeast-2": { "AMI": "ami-e3217a80" },
      "ap-northeast-1": { "AMI": "ami-f885ae96" },
      "ap-northeast-2": { "AMI": "ami-4118d72f" },
      "sa-east-1":      { "AMI": "ami-8631b5ea" }
    }
  },

  "Conditions": {
    "CreateRecordSet": {
      "Fn::And": [
        {
          "Fn::Not": [
            { "Fn::Equals": [{ "Ref": "HostedZoneName" }, ""] }
          ]
        },
        {
          "Fn::Not": [
            { "Fn::Equals": [{ "Ref": "ELBRecordSetName" }, ""] }
          ]
        }
      ]
    }
  },

  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref": "VPCCIDR" },
        "Tags": [ { "Value": "concourse", "Key": "Name" } ]
      }
    },

    "VPCGatewayInternetGateway": {
      "Type": "AWS::EC2::InternetGateway"
    },

    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "VPCGatewayInternetGateway" }
      }
    },

    "BOSHSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": "BOSH",
        "SecurityGroupEgress": [],
        "SecurityGroupIngress": [
          {
            "CidrIp": { "Ref": "BOSHInboundCIDR" },
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22"
          },
          {
            "CidrIp": { "Ref": "BOSHInboundCIDR" },
            "IpProtocol": "tcp",
            "FromPort": "6868",
            "ToPort": "6868"
          },
          {
            "CidrIp": { "Ref": "BOSHInboundCIDR" },
            "IpProtocol": "tcp",
            "FromPort": "25555",
            "ToPort": "25555"
          },
          {
            "SourceSecurityGroupId": { "Ref": "InternalSecurityGroup" },
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535"
          },
          {
            "SourceSecurityGroupId": { "Ref": "InternalSecurityGroup" },
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535"
          }
        ]
      }
    },

    "InternalSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": "Internal",
        "SecurityGroupEgress": [],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1"
          }
        ]
      }
    },

    "WebSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": "Web",
        "SecurityGroupEgress": [],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "2222",
            "ToPort": "2222"
          },
          {
            "CidrIp": "0.0.0.0/0",
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443"
          }
        ]
      }
    },

    "NATSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": "NAT",
        "SecurityGroupEgress": [],
        "SecurityGroupIngress": [
          {
            "SourceSecurityGroupId": { "Ref": "InternalSecurityGroup" },
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535"
          },
          {
            "SourceSecurityGroupId": { "Ref": "InternalSecurityGroup" },
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535"
          }
        ]
      }
    },

    "BOSHSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": { "Ref": "BOSHSubnetCIDR" },
        "Tags": [{ "Key": "Name", "Value": "BOSH" }]
      }
    },

    "BOSHRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": { "VpcId": { "Ref": "VPC" } }
    },

    "BOSHRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayInternetGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "VPCGatewayInternetGateway" },
        "RouteTableId": { "Ref": "BOSHRouteTable" }
      }
    },

    "BOSHSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "BOSHRouteTable" },
        "SubnetId": { "Ref": "BOSHSubnet" }
      }
    },

    "NATInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "m4.large",
        "SubnetId": { "Ref": "BOSHSubnet" },
        "ImageId" : {
          "Fn::FindInMap": ["AWSNATAMI", { "Ref" : "AWS::Region" }, "AMI"]
        },
        "KeyName": { "Ref" : "KeyName" },
        "SecurityGroupIds": [{ "Ref": "NATSecurityGroup" }],
        "SourceDestCheck": false,
        "Tags": [{ "Key": "Name", "Value": "NAT" }]
      }
    },

    "NATEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": { "Ref": "NATInstance" }
      }
    },

    "InternalSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::Select": ["0", { "Fn::GetAZs": { "Ref" : "AWS::Region" } }] },
        "CidrBlock": { "Ref": "InternalSubnetCIDR" },
        "VpcId": { "Ref": "VPC" },
        "Tags": [{ "Key": "Name", "Value": "Internal" }]
      }
    },

    "InternalRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": { "VpcId": { "Ref": "VPC" } }
    },

    "InternalRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "NATInstance",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": { "Ref": "InternalRouteTable" },
        "InstanceId": { "Ref": "NATInstance" }
      }
    },

    "InternalSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "InternalRouteTable" },
        "SubnetId": { "Ref": "InternalSubnet" }
      }
    },

    "LoadBalancerSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::Select": ["0", { "Fn::GetAZs": { "Ref" : "AWS::Region" } }] },
        "CidrBlock": { "Ref": "LoadBalancerSubnetCIDR" },
        "VpcId": { "Ref": "VPC" },
        "Tags": [{ "Key": "Name", "Value": "LoadBalancer" }]
      }
    },

    "LoadBalancerRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": { "VpcId": { "Ref": "VPC" } }
    },

    "LoadBalancerRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGatewayInternetGateway",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "VPCGatewayInternetGateway" },
        "RouteTableId": { "Ref": "LoadBalancerRouteTable" }
      }
    },

    "LoadBalancerSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "LoadBalancerRouteTable" },
        "SubnetId": { "Ref": "LoadBalancerSubnet" }
      }
    },

    "WebELBLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",

      "Properties": {
        "Subnets": [{ "Ref": "LoadBalancerSubnet" }],
        "SecurityGroups": [{ "Ref": "WebSecurityGroup" }],

        "HealthCheck": {
          "HealthyThreshold": "2",
          "Interval": "30",
          "Target": "tcp:8080",
          "Timeout": "5",
          "UnhealthyThreshold": "10"
        },

        "Listeners": [
          {
            "Protocol": "tcp",
            "LoadBalancerPort": "80",
            "InstanceProtocol": "tcp",
            "InstancePort": "8080"
          },
          {
            "Protocol": "tcp",
            "LoadBalancerPort": "2222",
            "InstanceProtocol": "tcp",
            "InstancePort": "2222"
          },
          {
            "Protocol" : "ssl",
            "LoadBalancerPort" : "443",
            "InstanceProtocol": "tcp",
            "InstancePort" : "8080",
            "SSLCertificateId" : {
              "Fn::Join":[
                "",
                [
                  "arn:aws:iam::",
                  {
                    "Ref":"AWS::AccountId"
                  },
                  ":server-certificate/",
                  {
                    "Ref":"LoadBalancerCertName"
                  }
                ]
              ]
            }
          }
        ]
      }
    },

    "WebELBRecordSet": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Condition": "CreateRecordSet",
      "Properties": {
        "HostedZoneName": { "Ref": "HostedZoneName" },
        "RecordSets": [
          {
            "Name": { "Ref": "ELBRecordSetName" },
            "Type": "A",
            "AliasTarget": {
              "HostedZoneId": {
                "Fn::GetAtt": [
                  "WebELBLoadBalancer",
                  "CanonicalHostedZoneNameID"
                ]
              },
              "DNSName": {
                "Fn::GetAtt": [
                  "WebELBLoadBalancer",
                  "CanonicalHostedZoneName"
                ]
              }
            }
          }
        ]
      }
    },

    "MicroEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": { "Domain": "vpc" }
    }
  }
}
